@using FormBuilder.Models

<RadzenPanelMenu>
    <RadzenPanelMenuItem Text="Add Validator" Icon="rule">
        <RadzenPanelMenuItem 
            Text="Required Validator"
            Icon="check" 
            Click="() => AddValidator(ValidatorType.Required)"/>
        
        @switch (Field.Type)
        {
            case FieldType.Text:
                <RadzenPanelMenuItem 
                    Text="Email Validator" 
                    Icon="mail" 
                    Click="() => AddValidator(ValidatorType.Email)"/>
                <RadzenPanelMenuItem 
                    Text="Length Validator" 
                    Icon="abc" 
                    Click="() => AddValidator(ValidatorType.Length)"/>
                break;
            case FieldType.NumericInt or FieldType.NumericDecimal:
                <RadzenPanelMenuItem 
                    Text="Numeric Range Validator"
                    Icon="filter_1" 
                    Click="() => AddValidator(ValidatorType.NumericRange)"/>
                break;
        }
    </RadzenPanelMenuItem>
</RadzenPanelMenu>

<RadzenAccordion Multiple="true">
    <Items>
        @foreach (var validator in Field.Validators)
        {
            @switch (validator)
            {
                case RequiredValidator requiredValidator:
                    <RadzenAccordionItem Text="Required Validator" Icon="check">
                        <ValidatorPropertyEditor Validator="@requiredValidator"/>
                    </RadzenAccordionItem>
                    break;
                case EmailValidator emailValidator:
                    <RadzenAccordionItem Text="Email Validator" Icon="mail">
                        <ValidatorPropertyEditor Validator="@emailValidator"/>
                    </RadzenAccordionItem>
                    break;
                case LengthValidator lengthValidator:
                    <RadzenAccordionItem Text="Length Validator" Icon="abc">
                        <ValidatorPropertyEditor Validator="@lengthValidator"/>
                    </RadzenAccordionItem>
                    break;
                case NumericRangeValidator numericRangeValidator:
                    <RadzenAccordionItem Text="Numeric Range Validator" Icon="filter_1">
                        <ValidatorPropertyEditor Validator="@numericRangeValidator"/>
                    </RadzenAccordionItem>
                    break;
            }
        }
    </Items>
</RadzenAccordion>
